// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using g181210044_g191210044.Data;

#nullable disable

namespace g181210044_g191210044.Migrations
{
    [DbContext(typeof(SporContext))]
    partial class SporContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("g181210044_g191210044.Entity.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Adminler");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        },
                        new
                        {
                            Id = 3
                        });
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.BlogYazari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("KatilimTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("MailAdresi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BlogYazarlari");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Zeynep Betül",
                            KatilimTarihi = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "sporHocasi@gmail.com",
                            Sifre = "11123",
                            Soyad = "Kalkanlı"
                        });
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.BlogYazisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(7500)
                        .HasColumnType("TEXT");

                    b.Property<int>("BegeniSayisi")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlogYazariId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("YayinTarihi")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlogYazariId");

                    b.ToTable("BlogYazilari");
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.Uye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("KatilimTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("MailAdresi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Uyeler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Esra",
                            KatilimTarihi = new DateTime(2020, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "esraYilmaz@gmail.com",
                            Sifre = "123resa",
                            Soyad = "Yılmaz"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Ebrar",
                            KatilimTarihi = new DateTime(2020, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "ebrarYildiz@gmail.com",
                            Sifre = "39421asrvw",
                            Soyad = "Yıldız"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Elif",
                            KatilimTarihi = new DateTime(2019, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "elifSevinnn@gmail.com",
                            Sifre = "245ebl32",
                            Soyad = "Sevimli"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Büşra",
                            KatilimTarihi = new DateTime(2018, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "busra123@gmail.com",
                            Sifre = "5g245g2",
                            Soyad = "Tekiner"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Ali",
                            KatilimTarihi = new DateTime(2020, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MailAdresi = "aliGulec@gmail.com",
                            Sifre = "afegt0459a",
                            Soyad = "Güleç"
                        });
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlogYazariId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BlogYazisiId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UyeId")
                        .HasMaxLength(3000)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BlogYazariId");

                    b.HasIndex("BlogYazisiId");

                    b.HasIndex("UyeId");

                    b.ToTable("Yorumlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icerik = "Kıymetli bir yazı olmuş.",
                            UyeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Icerik = "Deneyeceğim.",
                            UyeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Icerik = "Böyle yazılar yazmaya devam edin lütfen.",
                            UyeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Icerik = "Hayatıma geçirmek istiyorum.",
                            UyeId = 3
                        });
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.BlogYazisi", b =>
                {
                    b.HasOne("g181210044_g191210044.Entity.BlogYazari", null)
                        .WithMany("Yazilari")
                        .HasForeignKey("BlogYazariId");
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.Yorum", b =>
                {
                    b.HasOne("g181210044_g191210044.Entity.BlogYazari", null)
                        .WithMany("YaptigiYorumlar")
                        .HasForeignKey("BlogYazariId");

                    b.HasOne("g181210044_g191210044.Entity.BlogYazisi", null)
                        .WithMany("Yorumlar")
                        .HasForeignKey("BlogYazisiId");

                    b.HasOne("g181210044_g191210044.Entity.Uye", "Uye")
                        .WithMany("YaptigiYorumlar")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.BlogYazari", b =>
                {
                    b.Navigation("YaptigiYorumlar");

                    b.Navigation("Yazilari");
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.BlogYazisi", b =>
                {
                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("g181210044_g191210044.Entity.Uye", b =>
                {
                    b.Navigation("YaptigiYorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
